
name: CI

on: [push]

jobs:

  test-os:

    name: Test ${{ matrix.os }} ${{ matrix.toolchain.compiler }} ${{ matrix.toolchain.version }}
    runs-on: ${{ matrix.os }}
    strategy:

      # Having multiple matrices (e.g. os *and* gfortran) will test every
      # possible combination of those two matrices!
      matrix:
        #os: [ubuntu-latest]
        #os: [ubuntu-latest, macOS-latest]
        os: [ubuntu-latest, windows-latest]
        #os: [ubuntu-latest, windows-latest, macOS-latest]
        toolchain:
          - {compiler: gcc, version: 12}
          - {compiler: gcc, version: 13}
          #- {compiler: intel, version: 2024.2}
          #- {compiler: lfortran, version: '0.51.0'}
        #exclude:
        #  - os: windows-latest
        #    toolchain: {compiler: intel, version: 2024.2}

    steps:

    - uses: actions/checkout@v3
    #- uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - if: matrix.os == 'ubuntu-latest'
      name: Test numerical-analysis on ubuntu-latest
      run: |
        curl -L -o ./fpm https://github.com/fortran-lang/fpm/releases/download/current/fpm-linux-x86_64-gcc-12
        chmod +x fpm
        mv fpm /usr/local/bin
        fpm --version
        gfortran --version
        ./test.sh

    - if: matrix.os == 'windows-latest'
      name: Setup fpm on windows-latest
      shell: cmd
      run: |
        %USERPROFILE%\AppData\Local\Microsoft\WindowsApps\winget install FortranLang.fpm
        fpm --version

    - uses: actions/checkout@v3
    - uses: fortran-lang/setup-fpm@v7
    #- uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}
    - if: true  # yaml gets mad if you remove this because indentation is a dumb way to organize code
      name: Test numa on ${{ matrix.os }}
      run: |
        fpm run --example --profile debug
        fpm run --example --profile release
        fpm test --profile debug
        fpm test --profile release

  test-docker-gfortran:

    name: Test gfortran in docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test in docker
      run: |
        docker build . -t numa

  test-docker-ifx:

    name: Test ifx in docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test in docker
      run: |
        docker build . -t numa --file Dockerfile.ifx

